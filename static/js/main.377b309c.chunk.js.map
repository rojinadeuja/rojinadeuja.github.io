{"version":3,"sources":["Components/Main/Home/Home.js","Components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["home","id","src","className","href","method","action","target","type","style","paddingBottom","borderBottomStyle","main","Home","App","Main","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yPA6BeA,G,UA3BF,WACT,OACI,6BAII,yBAAKC,GAAG,cAAcC,IAAI,uBAC1B,yBAAKC,UAAU,gBACX,gCACI,4CACA,yFAEJ,yBAAKA,UAAU,eACX,qIAA0G,6BAA1G,iHAA6N,6BAA7N,wJAAuX,6BAAK,6BAC5X,kHADA,4BACoH,uBAAGC,KAAK,oCAAR,WAAyD,6BAC7K,0BAAMH,GAAG,WAAWI,OAAO,MAAMC,OAAO,sCAAsCC,OAAO,UACjF,4BAAQN,GAAG,eAAeO,KAAK,SAAQL,UAAU,gBAAe,0BAAMM,MAAO,CAAEC,cAAe,QAASC,kBAAmB,UAA1D,sBCVzEC,EAJF,WACT,OAAO,kBAACC,EAAD,OCUIC,MAVf,WACE,OACE,yBAAKX,UAAU,WACb,0BAAMA,UAAU,QACd,kBAACY,EAAD,SCGYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.377b309c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst home = () => {\r\n    return(\r\n        <div>\r\n            {/* <div className=\"main-header\">\r\n                <a href=\"https://www.linkedin.com/in/rojinadeuja/\" target=\"_blank\">Linkedin</a><a href=\"https://github.com/rojinadeuja\" target=\"_blank\">Github</a>\r\n            </div>  */}\r\n            <img id=\"motion-demo\" src=\"my-paper-plane.png\"/>    \r\n            <div className=\"profile-card\">\r\n                <header>\r\n                    <h1>ROJINA DEUJA</h1>\r\n                    <h2>M.S. in Computer Science, University of Nebraska-Lincoln</h2>\r\n                </header>\r\n                <div className=\"profile-bio\">\r\n                    <p>In 2019, I travelled half-way acorss the world to pursue Computer Science in the USA. So far, so great!<br/>I work as a Graduate Teaching Assitant facilitating courses related to Data Modeling and Software Engineering.<br/>I love learning about the human brain, so I do my research on Machine Learning and listen to podcasts. Invisibilia and Hidden Brain are my favorites!<br/><br/>\r\n                    <h3>I'm currently seeking Sofware Development Internship opportunity for Summer 2021. </h3>Lets get in touch &rarr; <a href=\"mailto: rojinadeuja33g@gmail.com\"> Email</a></p><br/>\r\n                    <form id='download' method=\"get\" action=\"assets/deuja_rojina_resume_2020.pdf\" target=\"_blank\">\r\n                        <button id='btn-download' type=\"submit\"className=\"btn-download\"><span style={{ paddingBottom: '0.3em', borderBottomStyle: 'solid' }}>View Resume</span></button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"main-footer\">\r\n                <p>Designed & Developed by Rojina Deuja | Inspired by <a href=\"https://codepen.io/VictoryDesign\" target=\"_blank\">David Jones</a></p>\r\n            </div> */}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default home;","import React from 'react';\r\nimport Home from './Home/Home'\r\n\r\n\r\nconst main = () => {\r\n    return <Home />\r\n}\r\n\r\nexport default main;","import React from 'react';\r\nimport './App.css';\r\nimport Main from './Components/Main/Main';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <main className=\"main\">\r\n        <Main></Main>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}